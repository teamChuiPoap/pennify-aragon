{"id":"node_modules/rxjs/_esm5/internal/util/isNumeric.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/util/isNumeric.js.map","includedInParent":true,"mtime":1682941429233},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/src/internal/util/isNumeric.ts","includedInParent":true,"mtime":1682941429233},{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/package.json","includedInParent":true,"mtime":1682941429233},{"name":"./isArray","loc":{"line":2,"column":24,"index":76},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/util/isNumeric.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/util/isArray.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNumeric = isNumeric;\nvar _isArray = require(\"./isArray\");\n/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\n\nfunction isNumeric(val) {\n  return !(0, _isArray.isArray)(val) && val - parseFloat(val) + 1 >= 0;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":10,"column":9}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":10,"column":18}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":10,"column":19}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":10,"column":22}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":10,"column":24}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":2}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":9}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":10}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":14}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":30}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":32}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":35}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":36}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":40}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":43}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":46}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":56}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":57}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":60}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":61}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":64}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":65}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":69}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":11,"column":70}}],"sources":{"../../../src/internal/util/isNumeric.ts":"import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n"},"lineCount":null}},"error":null,"hash":"5922e726c8d1c19cd2efefdcb7f75967","cacheData":{"env":{}}}