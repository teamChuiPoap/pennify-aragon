{"id":"node_modules/jsonschema/lib/validator.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/package.json","includedInParent":true,"mtime":1682941442049},{"name":"url","loc":{"line":3,"column":21,"index":36},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/validator.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/url/url.js"},{"name":"./attribute","loc":{"line":5,"column":24,"index":69},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/validator.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/attribute.js"},{"name":"./helpers","loc":{"line":6,"column":22,"index":107},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/validator.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/helpers.js"},{"name":"./scan","loc":{"line":7,"column":25,"index":146},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/validator.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/jsonschema/lib/scan.js"}],"generated":{"js":"'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/jsonschema/lib/validator.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}}],"sources":{"node_modules/jsonschema/lib/validator.js":"'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n"},"lineCount":337}},"error":null,"hash":"a8d712ffe76157b6bba2f093a8e6deb7","cacheData":{"env":{}}}