{"id":"node_modules/eth-provider/resolve/index.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/eth-provider/package.json","includedInParent":true,"mtime":1682941416634}],"generated":{"js":"const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eth-provider/resolve/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"node_modules/eth-provider/resolve/index.js":"const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n"},"lineCount":25}},"error":null,"hash":"05d034aac8e8f8f162beec993ea9aa2f","cacheData":{"env":{}}}