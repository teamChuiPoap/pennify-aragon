{"id":"node_modules/eth-provider/provider/index.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/eth-provider/package.json","includedInParent":true,"mtime":1682941416634},{"name":"events","loc":{"line":1,"column":29,"index":29},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/eth-provider/provider/index.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/events/events.js"},{"name":"ethereum-provider","loc":{"line":2,"column":33,"index":72},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/eth-provider/provider/index.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/ethereum-provider/index.js"},{"name":"../ConnectionManager","loc":{"line":3,"column":34,"index":127},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/eth-provider/provider/index.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/eth-provider/ConnectionManager/index.js"}],"generated":{"js":"const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/eth-provider/provider/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/eth-provider/provider/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/eth-provider/provider/index.js":"const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n"},"lineCount":40}},"error":null,"hash":"043f59053d2e4f41b71443232cb4eba8","cacheData":{"env":{}}}