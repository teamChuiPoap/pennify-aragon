{"id":"node_modules/@safe-global/safe-apps-sdk/dist/src/decorators/requirePermissions.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/decorators/requirePermissions.js.map","includedInParent":true,"mtime":1682941409327},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/src/decorators/requirePermissions.ts","includedInParent":true,"mtime":1682941409327},{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/package.json","includedInParent":true,"mtime":1682941409327},{"name":"../wallet","loc":{"line":3,"column":25,"index":102},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/decorators/requirePermissions.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/wallet/index.js"},{"name":"../types/permissions","loc":{"line":4,"column":30,"index":146},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/decorators/requirePermissions.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/types/permissions.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wallet_1 = require(\"../wallet\");\nconst permissions_1 = require(\"../types/permissions\");\nconst hasPermission = (required, permissions) => permissions.some((permission) => permission.parentCapability === required);\nconst requirePermission = () => (_, propertyKey, descriptor) => {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function () {\n        // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n        const wallet = new wallet_1.Wallet(this.communicator);\n        let currentPermissions = await wallet.getPermissions();\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            currentPermissions = await wallet.requestPermissions([{ [propertyKey]: {} }]);\n        }\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            throw new permissions_1.PermissionsError('Permissions rejected', permissions_1.PERMISSIONS_REQUEST_REJECTED);\n        }\n        return originalMethod.apply(this);\n    };\n    return descriptor;\n};\nexports.default = requirePermission;\n"},"sourceMaps":{"js":{"version":3,"file":"requirePermissions.js","sourceRoot":"","sources":["../../../src/decorators/requirePermissions.ts"],"names":[],"mappings":";;AAEA,sCAAmC;AAEnC,sDAAkG;AAElG,MAAM,aAAa,GAAG,CAAC,QAAiB,EAAE,WAAyB,EAAW,EAAE,CAC9E,WAAW,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,gBAAgB,KAAK,QAAQ,CAAC,CAAC;AAE7E,MAAM,iBAAiB,GAAG,GAAG,EAAE,CAAC,CAAC,CAAU,EAAE,WAAmB,EAAE,UAA8B,EAAE,EAAE;IAClG,MAAM,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;IAExC,UAAU,CAAC,KAAK,GAAG,KAAK;QACtB,mGAAmG;QACnG,MAAM,MAAM,GAAG,IAAI,eAAM,CAAE,IAAa,CAAC,YAAY,CAAC,CAAC;QAEvD,IAAI,kBAAkB,GAAG,MAAM,MAAM,CAAC,cAAc,EAAE,CAAC;QAEvD,IAAI,CAAC,aAAa,CAAC,WAAsB,EAAE,kBAAkB,CAAC,EAAE;YAC9D,kBAAkB,GAAG,MAAM,MAAM,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,WAAsB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SAC1F;QAED,IAAI,CAAC,aAAa,CAAC,WAAsB,EAAE,kBAAkB,CAAC,EAAE;YAC9D,MAAM,IAAI,8BAAgB,CAAC,sBAAsB,EAAE,0CAA4B,CAAC,CAAC;SAClF;QAED,OAAO,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,kBAAe,iBAAiB,CAAC","sourcesContent":["import { Methods } from '../communication';\nimport { Safe } from '../safe';\nimport { Wallet } from '../wallet';\n\nimport { Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions';\n\nconst hasPermission = (required: Methods, permissions: Permission[]): boolean =>\n  permissions.some((permission) => permission.parentCapability === required);\n\nconst requirePermission = () => (_: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = async function () {\n    // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n    const wallet = new Wallet((this as Safe).communicator);\n\n    let currentPermissions = await wallet.getPermissions();\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      currentPermissions = await wallet.requestPermissions([{ [propertyKey as Methods]: {} }]);\n    }\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    return originalMethod.apply(this);\n  };\n\n  return descriptor;\n};\n\nexport default requirePermission;\n"]}},"error":null,"hash":"bf0fcaea427ad9859b44936e91c80de4","cacheData":{"env":{}}}