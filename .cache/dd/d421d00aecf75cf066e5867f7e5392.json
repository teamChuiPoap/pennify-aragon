{"id":"node_modules/rxjs/_esm5/internal/operators/reduce.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/reduce.js.map","includedInParent":true,"mtime":1682941429233},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/src/internal/operators/reduce.ts","includedInParent":true,"mtime":1682941429233},{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/package.json","includedInParent":true,"mtime":1682941429233},{"name":"./scan","loc":{"line":2,"column":21,"index":107},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/reduce.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/scan.js"},{"name":"./takeLast","loc":{"line":3,"column":25,"index":142},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/reduce.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/takeLast.js"},{"name":"./defaultIfEmpty","loc":{"line":4,"column":31,"index":187},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/reduce.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js"},{"name":"../util/pipe","loc":{"line":5,"column":21,"index":228},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/reduce.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/util/pipe.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reduce = reduce;\nvar _scan = require(\"./scan\");\nvar _takeLast = require(\"./takeLast\");\nvar _defaultIfEmpty = require(\"./defaultIfEmpty\");\nvar _pipe = require(\"../util/pipe\");\n/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\n\nfunction reduce(accumulator, seed) {\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source) {\n      return (0, _pipe.pipe)((0, _scan.scan)(accumulator, seed), (0, _takeLast.takeLast)(1), (0, _defaultIfEmpty.defaultIfEmpty)(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source) {\n    return (0, _pipe.pipe)((0, _scan.scan)(function (acc, value, index) {\n      return accumulator(acc, value, index + 1);\n    }), (0, _takeLast.takeLast)(1))(source);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":13,"column":9}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":16},"generated":{"line":13,"column":15}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":16},"generated":{"line":13,"column":16}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":13,"column":27}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":13,"column":29}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":13,"column":33}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":13,"column":35}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":14,"column":6}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":11},"generated":{"line":14,"column":15}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":11},"generated":{"line":14,"column":16}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":20},"generated":{"line":14,"column":22}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":20},"generated":{"line":14,"column":26}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":20},"generated":{"line":14,"column":27}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":20},"generated":{"line":14,"column":29}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":15,"column":11}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":15,"column":20}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":43},"generated":{"line":15,"column":50}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":43},"generated":{"line":15,"column":51}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":54},"generated":{"line":15,"column":57}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":56},"generated":{"line":15,"column":59}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":6}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":13}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":17}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":27}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":29}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":33}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":43}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":45}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":56}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":58}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":62}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":63}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":65}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":69}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":87}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":89}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":90}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":91}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":93}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":97}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":127}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":129}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":133}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":134}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":135}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":136}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":142}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":16,"column":143}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":75,"column":3},"generated":{"line":17,"column":4}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":75,"column":3},"generated":{"line":17,"column":5}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":19,"column":9}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":19,"column":18}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":27},"generated":{"line":19,"column":40}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":27},"generated":{"line":19,"column":41}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":34},"generated":{"line":19,"column":47}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":34},"generated":{"line":19,"column":49}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":11}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":15}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":25}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":27}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":31}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":41}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":43}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":53}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":56}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":58}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":63}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":65}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":70}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":20,"column":72}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":6}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":13}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":24}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":25}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":28}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":30}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":35}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":37}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":42}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":45}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":46}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":21,"column":47}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":4}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":5}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":6}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":8}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":12}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":30}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":32}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":33}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":34}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":35}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":36}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":42}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":22,"column":43}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":23,"column":2}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":23,"column":3}}],"sources":{"../../../src/internal/operators/reduce.ts":"import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\n    return pipe(\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"4215f5b9f1fd447b44bd5c241bca93c2","cacheData":{"env":{}}}