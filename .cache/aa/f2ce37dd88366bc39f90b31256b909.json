{"id":"node_modules/@1hive/radspec/dist/helpers/lib/methodRegistry.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@1hive/radspec/dist/helpers/lib/methodRegistry.js.map","includedInParent":true,"mtime":1682941398899},{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@1hive/radspec/package.json","includedInParent":true,"mtime":1682941398899},{"name":"ethers","loc":{"line":1,"column":33,"index":33},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@1hive/radspec/dist/helpers/lib/methodRegistry.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/ethers/lib.esm/index.js"}],"generated":{"js":"\"use strict\";var _ethers=require(\"ethers\");Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;// From: https://github.com/danfinlay/eth-method-registry\nconst REGISTRY_LOOKUP_ABI=[\"function entries(bytes4) public view returns (string)\"],REGISTRY_MAP={1:\"0x44691B39d1a75dC4E0A0346CBB15E310e6ED1E86\"};// networkId -> registry address\nclass MethodRegistry{constructor(){let opts=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{};this.provider=opts.provider||ethers.getDefaultProvider(),this.registryAddres=opts.registry||REGISTRY_MAP[opts.network]}async initRegistry(){if(!this.registryAddres)throw new Error(\"No method registry found for the network.\");this.registry=new _ethers.Contract(this.registryAddres,REGISTRY_LOOKUP_ABI,this.provider)}async lookup(sigBytes){return this.registry||(await this.initRegistry()),this.registry.entries(sigBytes)}}exports.default=MethodRegistry;\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/helpers/lib/methodRegistry.js"],"names":["REGISTRY_LOOKUP_ABI","REGISTRY_MAP","MethodRegistry","constructor","opts","provider","ethers","getDefaultProvider","registryAddres","registry","network","initRegistry","Error","Contract","lookup","sigBytes","entries"],"mappings":"aACA,8B,8EADA;KAGMA,CAAAA,mBAAmB,CAAG,CAC1B,uDAD0B,C,CAKtBC,YAAY,CAAG,CACnB,EAAG,4CADgB,C,CADrB;AAKe,KAAMC,CAAAA,cAAe,CAClCC,WAAW,EAAa,IAAXC,CAAAA,IAAW,wDAAJ,EAAI,CACtB,KAAKC,QAAL,CACED,IAAI,CAACC,QAAL,EAAiBC,MAAM,CAACC,kBAAP,EAFG,CAGtB,KAAKC,cAAL,CAAsBJ,IAAI,CAACK,QAAL,EAAiBR,YAAY,CAACG,IAAI,CAACM,OAAN,CACpD,CAEiB,KAAZC,CAAAA,YAAY,EAAI,CACpB,GAAI,CAAC,KAAKH,cAAV,CACE,KAAM,IAAII,CAAAA,KAAJ,CAAU,2CAAV,CAAN,CAGF,KAAKH,QAAL,CAAgB,GAAII,iBAAJ,CACd,KAAKL,cADS,CAEdR,mBAFc,CAGd,KAAKK,QAHS,CAKjB,CAEW,KAANS,CAAAA,MAAM,CAAEC,QAAF,CAAY,CAKtB,MAJK,MAAKN,QAIV,GAHE,KAAM,MAAKE,YAAL,EAGR,EAAO,KAAKF,QAAL,CAAcO,OAAd,CAAsBD,QAAtB,CACR,CAzBiC,C","sourcesContent":["// From: https://github.com/danfinlay/eth-method-registry\nimport { Contract, providers as ethersProviders } from 'ethers'\n\nconst REGISTRY_LOOKUP_ABI = [\n  'function entries(bytes4) public view returns (string)'\n]\n\n// networkId -> registry address\nconst REGISTRY_MAP = {\n  1: '0x44691B39d1a75dC4E0A0346CBB15E310e6ED1E86'\n}\n\nexport default class MethodRegistry {\n  constructor (opts = {}) {\n    this.provider =\n      opts.provider || ethers.getDefaultProvider()\n    this.registryAddres = opts.registry || REGISTRY_MAP[opts.network]\n  }\n\n  async initRegistry () {\n    if (!this.registryAddres) {\n      throw new Error('No method registry found for the network.')\n    }\n\n    this.registry = new Contract(\n      this.registryAddres,\n      REGISTRY_LOOKUP_ABI,\n      this.provider\n    )\n  }\n\n  async lookup (sigBytes) {\n    if (!this.registry) {\n      await this.initRegistry()\n    }\n\n    return this.registry.entries(sigBytes)\n  }\n}\n"],"file":"methodRegistry.js"}},"error":null,"hash":"ed768f1b623968fea42311160375cec5","cacheData":{"env":{}}}