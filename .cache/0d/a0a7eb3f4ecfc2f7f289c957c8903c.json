{"id":"node_modules/rxjs/_esm5/internal/observable/partition.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/observable/partition.js.map","includedInParent":true,"mtime":1682941429233},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/src/internal/observable/partition.ts","includedInParent":true,"mtime":1682941429233},{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/package.json","includedInParent":true,"mtime":1682941429233},{"name":"../util/not","loc":{"line":2,"column":20,"index":121},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/observable/partition.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/util/not.js"},{"name":"../util/subscribeTo","loc":{"line":3,"column":28,"index":164},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/observable/partition.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/util/subscribeTo.js"},{"name":"../operators/filter","loc":{"line":4,"column":23,"index":210},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/observable/partition.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/operators/filter.js"},{"name":"../Observable","loc":{"line":5,"column":27,"index":260},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/observable/partition.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/rxjs/_esm5/internal/Observable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partition = partition;\nvar _not = require(\"../util/not\");\nvar _subscribeTo = require(\"../util/subscribeTo\");\nvar _filter = require(\"../operators/filter\");\nvar _Observable = require(\"../Observable\");\n/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */\n\nfunction partition(source, predicate, thisArg) {\n  return [(0, _filter.filter)(predicate, thisArg)(new _Observable.Observable((0, _subscribeTo.subscribeTo)(source))), (0, _filter.filter)((0, _not.not)(predicate, thisArg))(new _Observable.Observable((0, _subscribeTo.subscribeTo)(source)))];\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":18}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":19}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":25}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":27}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":36}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":38}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":45}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":13,"column":47}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":14,"column":9}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":14,"column":10}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":14,"column":14}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":10},"generated":{"line":14,"column":28}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":11},"generated":{"line":14,"column":30}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":15},"generated":{"line":14,"column":39}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":15},"generated":{"line":14,"column":41}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":14,"column":48}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":14,"column":49}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":14,"column":50}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":42},"generated":{"line":14,"column":54}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":14,"column":76}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":14,"column":77}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":14,"column":81}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":14,"column":105}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":14,"column":107}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":73},"generated":{"line":14,"column":113}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":73},"generated":{"line":14,"column":114}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":73},"generated":{"line":14,"column":115}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":73},"generated":{"line":14,"column":116}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":118}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":122}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":136}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":138}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":142}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":150}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":152}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":161}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":163}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":170}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":171}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":172}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":173}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":177}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":199}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":200}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":204}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":228}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":230}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":236}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":237}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":238}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":14,"column":239}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":14,"column":240}}],"sources":{"../../../src/internal/observable/partition.ts":"import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n"},"lineCount":null}},"error":null,"hash":"08538afed8d51f447fb6792f0db9e127","cacheData":{"env":{}}}