{"id":"node_modules/@safe-global/safe-apps-sdk/dist/src/types/messaging.js","dependencies":[{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/types/messaging.js.map","includedInParent":true,"mtime":1682941409327},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/src/types/messaging.ts","includedInParent":true,"mtime":1682941409327},{"name":"/home/agevi/chui Organisation/pennify-aragon/package.json","includedInParent":true,"mtime":1682968105152},{"name":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/package.json","includedInParent":true,"mtime":1682941409327},{"name":"../communication/methods","loc":{"line":3,"column":26,"index":103},"parent":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/types/messaging.js","resolved":"/home/agevi/chui Organisation/pennify-aragon/node_modules/@safe-global/safe-apps-sdk/dist/src/communication/methods.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst methods_1 = require(\"../communication/methods\");\n"},"sourceMaps":{"js":{"version":3,"file":"messaging.js","sourceRoot":"","sources":["../../../src/types/messaging.ts"],"names":[],"mappings":";;AAAA,sDAAmD","sourcesContent":["import { Methods } from '../communication/methods';\nimport { SafeInfo, ChainInfo, SendTransactionsResponse, EnvironmentInfo, AddressBookItem } from './sdk';\nimport { GatewayTransactionDetails, SafeBalances } from './gateway';\nimport { Permission } from './permissions';\n\nexport type RequestId = string;\n\nexport type InterfaceMessageEvent = MessageEvent<Response>;\n\nexport interface MethodToResponse {\n  [Methods.sendTransactions]: SendTransactionsResponse;\n  [Methods.rpcCall]: unknown;\n  [Methods.getSafeInfo]: SafeInfo;\n  [Methods.getChainInfo]: ChainInfo;\n  [Methods.getTxBySafeTxHash]: GatewayTransactionDetails;\n  [Methods.getSafeBalances]: SafeBalances[];\n  [Methods.signMessage]: SendTransactionsResponse;\n  [Methods.signTypedMessage]: SendTransactionsResponse;\n  [Methods.getEnvironmentInfo]: EnvironmentInfo;\n  [Methods.requestAddressBook]: AddressBookItem[];\n  [Methods.wallet_getPermissions]: Permission[];\n  [Methods.wallet_requestPermissions]: Permission[];\n}\n\nexport type SDKRequestData<M extends Methods = Methods, P = unknown> = {\n  id: RequestId;\n  params: P;\n  env: {\n    sdkVersion: string;\n  };\n  method: M;\n};\n\nexport type SDKMessageEvent = MessageEvent<SDKRequestData>;\n\nexport type ErrorResponse = {\n  id: RequestId;\n  success: false;\n  error: string;\n  version?: string;\n};\n\nexport type SuccessResponse<T = MethodToResponse[Methods]> = {\n  id: RequestId;\n  data: T;\n  version?: string;\n  success: true;\n};\n\nexport type Response<T = MethodToResponse[Methods]> = ErrorResponse | SuccessResponse<T>;\n\nexport interface Communicator {\n  send<M extends Methods, P = unknown, R = unknown>(method: M, params: P): Promise<SuccessResponse<R>>;\n}\n"]}},"error":null,"hash":"9707f741084b9e10cc804ea151da41b9","cacheData":{"env":{}}}